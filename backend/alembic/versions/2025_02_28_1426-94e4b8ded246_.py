"""empty message

Revision ID: 94e4b8ded246
Revises: 
Create Date: 2025-02-28 14:26:50.162629+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '94e4b8ded246'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('password', sa.String(length=48), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('dishes',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('banner_path', sa.String(length=32), nullable=True),
    sa.Column('price', sa.Numeric(precision=8, scale=2), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('weight', sa.SmallInteger(), nullable=True),
    sa.Column('categoryId', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['categoryId'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('orders',
    sa.Column('userId', sa.Uuid(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'accepted', 'coocking', 'ready', 'taken', name='orderstatus'), nullable=False),
    sa.Column('takeout_time', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orderItems',
    sa.Column('orderId', sa.Uuid(), nullable=False),
    sa.Column('dishId', sa.Uuid(), nullable=False),
    sa.Column('amount', sa.SmallInteger(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['dishId'], ['dishes.id'], ),
    sa.ForeignKeyConstraint(['orderId'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('orderId', 'dishId', name='_order_dishes_uc')
    )
    op.create_table('shoppingCartItems',
    sa.Column('userId', sa.Uuid(), nullable=False),
    sa.Column('dishId', sa.Uuid(), nullable=False),
    sa.Column('amount', sa.SmallInteger(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['dishId'], ['dishes.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('userId', 'dishId', name='_user_dishes_uc')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('shoppingCartItems')
    op.drop_table('orderItems')
    op.drop_table('orders')
    op.drop_table('dishes')
    op.drop_table('users')
    op.drop_table('categories')
    # ### end Alembic commands ###
