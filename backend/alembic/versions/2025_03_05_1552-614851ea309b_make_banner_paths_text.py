"""Make banner paths text

Revision ID: 614851ea309b
Revises: ac2605abb0f9
Create Date: 2025-03-05 15:52:21.366947+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '614851ea309b'
down_revision: Union[str, None] = 'ac2605abb0f9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('categories', 'createdAt',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"))
    op.alter_column('categories', 'updatedAt',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"))
    op.alter_column('dishes', 'banner_path',
               existing_type=sa.VARCHAR(length=32),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('dishes', 'createdAt',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"))
    op.alter_column('dishes', 'updatedAt',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"))
    op.alter_column('orders', 'takeout_time',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('orders', 'createdAt',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"))
    op.alter_column('orders', 'updatedAt',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"))
    op.alter_column('users', 'createdAt',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"))
    op.alter_column('users', 'updatedAt',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'updatedAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"))
    op.alter_column('users', 'createdAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"))
    op.alter_column('orders', 'updatedAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"))
    op.alter_column('orders', 'createdAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"))
    op.alter_column('orders', 'takeout_time',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('dishes', 'updatedAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"))
    op.alter_column('dishes', 'createdAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"))
    op.alter_column('dishes', 'banner_path',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=32),
               existing_nullable=True)
    op.alter_column('categories', 'updatedAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"))
    op.alter_column('categories', 'createdAt',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, CURRENT_TIMESTAMP)"))
    # ### end Alembic commands ###
